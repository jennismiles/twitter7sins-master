sudo apt install python-pip
mkdir ansibletest
cd ansibletest
export LC_ALL="en_US.UTF-8"
export LC_CTYPE="en_US.UTF-8"
sudo dpkg-reconfigure locales
pip install virtualenv
virtualenv env_ansible
source env_ansible/bin/activate
deactivate

source env_ansible/bin/activate
pip install ansible



#vi ansible.cfg

#[defaults]
#hostfile = hosts

#remote_user = root 

#host_key_checking = False




########################inventory
vi hosts

[local]
127.0.0.1

[remote]
45.113.235.73

###########################
ansible -i /home/ubuntu/ansibletest/hosts --connection=local local -m ping
ansible -i ./hosts remote -v -m ping -u root --private-key=~/.ssh/wifitrack


ansible -i ./hosts local --connection=local -b --become-user=root -m apt -a 'name=nginx state=installed update_cache=true'


#########################Playbooks
vi nginx.yml
---
# hosts could have been "remote" or "all" as well
- hosts: local
  connection: local
  become: yes
  become_user: root
  tasks:
   - name: Install Nginx
     apt:
       name: nginx
       state: installed
       update_cache: true


vi nginx.yml
---
- hosts: remote
  become: yes
  become_user: root
  tasks:
   - name: Install Nginx
     apt:
       name: nginx
       state: installed
       update_cache: true


ansible-playbook -i ./hosts nginx.yml

###########################Handlers

vi nginx.yml


---
# Example shows using the local machine still
# Remove 'connection' and set hosts to 'remote' for a remote connection
- hosts: local
  connection: local
  become: yes
  become_user: root
  tasks:
   - name: Install Nginx
     apt:
       name: nginx
       state: installed
       update_cache: true
     notify:
      - Start Nginx

  handlers:
   - name: Start Nginx
     service:
       name: nginx
       state: started



ansible-playbook -i ./hosts nginx.yml






vi nginx.yml

---
# Example shows using the local machine still
# Remove 'connection' and set hosts to 'remote' for a remote connection
- hosts: local
  connection: local
  become: yes
  become_user: root
  vars:
   - docroot: /var/www/serversforhackers.com/public
  tasks:
   - name: Add Nginx Repository
     apt_repository:
       repo: ppa:nginx/stable
       state: present
     register: ppastable

   - name: Install Nginx
     apt:
       pkg: nginx
       state: installed
       update_cache: true
     when: ppastable|success
     notify:
      - Start Nginx

   - name: Create Web Root
     file:
      path: '{{ docroot }}'
      mode: 775
      state: directory
      owner: www-data
      group: www-data
     notify:
      - Reload Nginx

  handlers:
   - name: Start Nginx
     service:
       name: nginx
       state: started

   - name: Reload Nginx
     service:
        name: nginx
        state: reloaded







###############################roles
mkdir roles
cd roles
ansible-galaxy init nginx
cd nginx
cd handlers
vi main.yml



---
- name: Start Nginx
  service:
    name: nginx
    state: started

- name: Reload Nginx
  service:
    name: nginx
    state: reloaded



cd ~/ansibletest/roles/nginx/meta

cat main.yml
或者vi main.yml
---
dependencies:
  - { role: ssl }












#################################demo
mkdir users_roles
cd users_roles
ansible-galaxy init users_roles




